plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.example.composecleanarchitecture'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.composecleanarchitecture"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }

        variant.outputs.all {
            outputFileName = "Apk-v${variant.versionCode}-${variant.versionName}-${new Date().format('ddMMyy_HHmm')}-${variant.buildType.name}.apk"
        }
    }

    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').canRead()) {
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
    }

    flavorDimensions "version"
    productFlavors {
        demo {
            dimension "version"
            buildConfigField "String", "SERVER_URL", '" https://hris.sslwireless.com/api/v1/"'
            buildConfigField "String", "API_KEY", '"dd"'
            versionNameSuffix "-demo"
            buildConfigField "boolean", "ENABLE_FEATURE", "true"
        }
        live {
            dimension "version"
            buildConfigField "String", "SERVER_URL", '" https://hris.sslwireless.com/api/v1/"'
            buildConfigField "String", "API_KEY",'"dd"'
            versionNameSuffix "-live"
            buildConfigField "boolean", "ENABLE_FEATURE", "true"
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$kotlin_version"
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.core:core-ktx:+'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'


    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    //bottom nav
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //room db
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-paging:$room_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okHttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp3_version"

    //paging3
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-compose:$paging_version"

    //memory leak
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'

    //lottie animation
    implementation("com.airbnb.android:lottie-compose:$lottie_version")

    //coil image load
    implementation "io.coil-kt:coil-compose:$coil_version"

    // workmanager
    implementation "androidx.work:work-runtime-ktx:$workmanager_version"

    // material
    implementation "androidx.compose.material:material-icons-extended:1.5.1"
}

kapt {
    correctErrorTypes true
}
